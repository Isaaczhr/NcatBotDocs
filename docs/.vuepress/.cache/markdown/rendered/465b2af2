{"content":"<p>首先你需要填写config.yaml文件:</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yaml\" data-title=\"yaml\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>ws:</span></span>\n<span class=\"line\"><span>  Protocol: ws</span></span>\n<span class=\"line\"><span>  ip: 127.0.0.1</span></span>\n<span class=\"line\"><span>  port: 3001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>http:</span></span>\n<span class=\"line\"><span>  Protocol: http</span></span>\n<span class=\"line\"><span>  ip: 127.0.0.1</span></span>\n<span class=\"line\"><span>  port: 3000</span></span>\n<span class=\"line\"><span>  sync: true</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>plugin:</span></span>\n<span class=\"line\"><span>  xunfei:</span></span>\n<span class=\"line\"><span>    api_url:</span></span>\n<span class=\"line\"><span>    api_key:</span></span>\n<span class=\"line\"><span>    model: generalv3.5</span></span>\n<span class=\"line\"><span>    personality: You are a helpful assistant.</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后运行以下代码：</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"python\" data-title=\"python\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span># encoding: utf-8</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>import ncatpy</span></span>\n<span class=\"line\"><span>from ncatpy import logging</span></span>\n<span class=\"line\"><span>from ncatpy.message import GroupMessage,PrivateMessage</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>_log = logging.get_logger()</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>class MyClient(ncatpy.Client):</span></span>\n<span class=\"line\"><span>    async def on_group_message(self, message: GroupMessage):</span></span>\n<span class=\"line\"><span>        _log.info(f\"收到群消息，ID: {message.message.text.text}\")</span></span>\n<span class=\"line\"><span>        _log.info(message.user_id)</span></span>\n<span class=\"line\"><span>        if message.user_id == 2793415370:</span></span>\n<span class=\"line\"><span>            # 当提问者的QQ号是2793415370时，调用XunfeiGPT插件回答他的问题</span></span>\n<span class=\"line\"><span>            # t = await self._XunfeiGPT.ai_response(input=message.message.text.text, group_id=message.group_id) # 单轮ai聊天</span></span>\n<span class=\"line\"><span>            t = await self._XunfeiGPT.ai_response_history(input=message.message.text.text, info= True, group_id=message.group_id)# 多轮ai聊天,可用参数：开发者模式：info=True,历史记录次数：history_num=5</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span>        if message.message.text.text == \"你好\":</span></span>\n<span class=\"line\"><span>            # 通过http发送消息</span></span>\n<span class=\"line\"><span>            t = await message.add_text(\"你好,o\").reply()</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span>            </span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    async def on_private_message(self, message: PrivateMessage):</span></span>\n<span class=\"line\"><span>        _log.info(f\"收到私聊消息，ID: {message.message.text.text}\")</span></span>\n<span class=\"line\"><span>        if message.message.text.text == \"你好\":</span></span>\n<span class=\"line\"><span>            t = await self._api.send_msg(user_id=message.user_id, text=\"你好,o\")</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>if __name__ == \"__main__\":</span></span>\n<span class=\"line\"><span>    # 1. 通过预设置的类型，设置需要监听的事件通道</span></span>\n<span class=\"line\"><span>    # intents = ncatpy.Intents.public() # 可以订阅public，包括了私聊和群聊</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    # 2. 通过kwargs，设置需要监听的事件通道</span></span>\n<span class=\"line\"><span>    intents = ncatpy.Intents(group_event=True)</span></span>\n<span class=\"line\"><span>    client = MyClient(intents=intents, plugins=[\"XunfeiGPT\"])# 如果没有插件，则不需要添加plugins=[\"XunfeiGPT\"]</span></span>\n<span class=\"line\"><span>    client.run()</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","env":{"base":"/","filePath":"/home/isaac/GitHub/docs.ncatbot.xyz/docs/notes/guide/快速开始/简单入门实例.md","filePathRelative":"notes/guide/快速开始/简单入门实例.md","frontmatter":{"title":"简单入门实例","createTime":"2025/01/11 05:34:19","permalink":"/guide/aijuxo7q/","icon":"tabler:door"},"sfcBlocks":{"template":{"type":"template","content":"<template><p>首先你需要填写config.yaml文件:</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yaml\" data-title=\"yaml\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>ws:</span></span>\n<span class=\"line\"><span>  Protocol: ws</span></span>\n<span class=\"line\"><span>  ip: 127.0.0.1</span></span>\n<span class=\"line\"><span>  port: 3001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>http:</span></span>\n<span class=\"line\"><span>  Protocol: http</span></span>\n<span class=\"line\"><span>  ip: 127.0.0.1</span></span>\n<span class=\"line\"><span>  port: 3000</span></span>\n<span class=\"line\"><span>  sync: true</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>plugin:</span></span>\n<span class=\"line\"><span>  xunfei:</span></span>\n<span class=\"line\"><span>    api_url:</span></span>\n<span class=\"line\"><span>    api_key:</span></span>\n<span class=\"line\"><span>    model: generalv3.5</span></span>\n<span class=\"line\"><span>    personality: You are a helpful assistant.</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后运行以下代码：</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"python\" data-title=\"python\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span># encoding: utf-8</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>import ncatpy</span></span>\n<span class=\"line\"><span>from ncatpy import logging</span></span>\n<span class=\"line\"><span>from ncatpy.message import GroupMessage,PrivateMessage</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>_log = logging.get_logger()</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>class MyClient(ncatpy.Client):</span></span>\n<span class=\"line\"><span>    async def on_group_message(self, message: GroupMessage):</span></span>\n<span class=\"line\"><span>        _log.info(f\"收到群消息，ID: {message.message.text.text}\")</span></span>\n<span class=\"line\"><span>        _log.info(message.user_id)</span></span>\n<span class=\"line\"><span>        if message.user_id == 2793415370:</span></span>\n<span class=\"line\"><span>            # 当提问者的QQ号是2793415370时，调用XunfeiGPT插件回答他的问题</span></span>\n<span class=\"line\"><span>            # t = await self._XunfeiGPT.ai_response(input=message.message.text.text, group_id=message.group_id) # 单轮ai聊天</span></span>\n<span class=\"line\"><span>            t = await self._XunfeiGPT.ai_response_history(input=message.message.text.text, info= True, group_id=message.group_id)# 多轮ai聊天,可用参数：开发者模式：info=True,历史记录次数：history_num=5</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span>        if message.message.text.text == \"你好\":</span></span>\n<span class=\"line\"><span>            # 通过http发送消息</span></span>\n<span class=\"line\"><span>            t = await message.add_text(\"你好,o\").reply()</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span>            </span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    async def on_private_message(self, message: PrivateMessage):</span></span>\n<span class=\"line\"><span>        _log.info(f\"收到私聊消息，ID: {message.message.text.text}\")</span></span>\n<span class=\"line\"><span>        if message.message.text.text == \"你好\":</span></span>\n<span class=\"line\"><span>            t = await self._api.send_msg(user_id=message.user_id, text=\"你好,o\")</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>if __name__ == \"__main__\":</span></span>\n<span class=\"line\"><span>    # 1. 通过预设置的类型，设置需要监听的事件通道</span></span>\n<span class=\"line\"><span>    # intents = ncatpy.Intents.public() # 可以订阅public，包括了私聊和群聊</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    # 2. 通过kwargs，设置需要监听的事件通道</span></span>\n<span class=\"line\"><span>    intents = ncatpy.Intents(group_event=True)</span></span>\n<span class=\"line\"><span>    client = MyClient(intents=intents, plugins=[\"XunfeiGPT\"])# 如果没有插件，则不需要添加plugins=[\"XunfeiGPT\"]</span></span>\n<span class=\"line\"><span>    client.run()</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div></template>","contentStripped":"<p>首先你需要填写config.yaml文件:</p>\n<div class=\"language-yaml line-numbers-mode\" data-ext=\"yaml\" data-title=\"yaml\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span>ws:</span></span>\n<span class=\"line\"><span>  Protocol: ws</span></span>\n<span class=\"line\"><span>  ip: 127.0.0.1</span></span>\n<span class=\"line\"><span>  port: 3001</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>http:</span></span>\n<span class=\"line\"><span>  Protocol: http</span></span>\n<span class=\"line\"><span>  ip: 127.0.0.1</span></span>\n<span class=\"line\"><span>  port: 3000</span></span>\n<span class=\"line\"><span>  sync: true</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>plugin:</span></span>\n<span class=\"line\"><span>  xunfei:</span></span>\n<span class=\"line\"><span>    api_url:</span></span>\n<span class=\"line\"><span>    api_key:</span></span>\n<span class=\"line\"><span>    model: generalv3.5</span></span>\n<span class=\"line\"><span>    personality: You are a helpful assistant.</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div><p>然后运行以下代码：</p>\n<div class=\"language-python line-numbers-mode\" data-ext=\"python\" data-title=\"python\"><button class=\"copy\" title=\"复制代码\" data-copied=\"已复制\"></button><pre class=\"shiki shiki-themes vitesse-light vitesse-dark vp-code\" v-pre=\"\"><code><span class=\"line\"><span># encoding: utf-8</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>import ncatpy</span></span>\n<span class=\"line\"><span>from ncatpy import logging</span></span>\n<span class=\"line\"><span>from ncatpy.message import GroupMessage,PrivateMessage</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>_log = logging.get_logger()</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>class MyClient(ncatpy.Client):</span></span>\n<span class=\"line\"><span>    async def on_group_message(self, message: GroupMessage):</span></span>\n<span class=\"line\"><span>        _log.info(f\"收到群消息，ID: {message.message.text.text}\")</span></span>\n<span class=\"line\"><span>        _log.info(message.user_id)</span></span>\n<span class=\"line\"><span>        if message.user_id == 2793415370:</span></span>\n<span class=\"line\"><span>            # 当提问者的QQ号是2793415370时，调用XunfeiGPT插件回答他的问题</span></span>\n<span class=\"line\"><span>            # t = await self._XunfeiGPT.ai_response(input=message.message.text.text, group_id=message.group_id) # 单轮ai聊天</span></span>\n<span class=\"line\"><span>            t = await self._XunfeiGPT.ai_response_history(input=message.message.text.text, info= True, group_id=message.group_id)# 多轮ai聊天,可用参数：开发者模式：info=True,历史记录次数：history_num=5</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span>        if message.message.text.text == \"你好\":</span></span>\n<span class=\"line\"><span>            # 通过http发送消息</span></span>\n<span class=\"line\"><span>            t = await message.add_text(\"你好,o\").reply()</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span>            </span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    async def on_private_message(self, message: PrivateMessage):</span></span>\n<span class=\"line\"><span>        _log.info(f\"收到私聊消息，ID: {message.message.text.text}\")</span></span>\n<span class=\"line\"><span>        if message.message.text.text == \"你好\":</span></span>\n<span class=\"line\"><span>            t = await self._api.send_msg(user_id=message.user_id, text=\"你好,o\")</span></span>\n<span class=\"line\"><span>            _log.info(t)</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>if __name__ == \"__main__\":</span></span>\n<span class=\"line\"><span>    # 1. 通过预设置的类型，设置需要监听的事件通道</span></span>\n<span class=\"line\"><span>    # intents = ncatpy.Intents.public() # 可以订阅public，包括了私聊和群聊</span></span>\n<span class=\"line\"><span></span></span>\n<span class=\"line\"><span>    # 2. 通过kwargs，设置需要监听的事件通道</span></span>\n<span class=\"line\"><span>    intents = ncatpy.Intents(group_event=True)</span></span>\n<span class=\"line\"><span>    client = MyClient(intents=intents, plugins=[\"XunfeiGPT\"])# 如果没有插件，则不需要添加plugins=[\"XunfeiGPT\"]</span></span>\n<span class=\"line\"><span>    client.run()</span></span></code></pre>\n\n<div class=\"line-numbers\" aria-hidden=\"true\" style=\"counter-reset:line-number 0\"><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div><div class=\"line-number\"></div></div></div>","tagOpen":"<template>","tagClose":"</template>"},"script":null,"scriptSetup":null,"scripts":[],"styles":[],"customBlocks":[]},"content":"首先你需要填写config.yaml文件:\n\n```yaml\nws:\n  Protocol: ws\n  ip: 127.0.0.1\n  port: 3001\n\nhttp:\n  Protocol: http\n  ip: 127.0.0.1\n  port: 3000\n  sync: true\n\nplugin:\n  xunfei:\n    api_url:\n    api_key:\n    model: generalv3.5\n    personality: You are a helpful assistant.\n```\n\n然后运行以下代码：\n\n```python\n# encoding: utf-8\n\nimport ncatpy\nfrom ncatpy import logging\nfrom ncatpy.message import GroupMessage,PrivateMessage\n\n_log = logging.get_logger()\n\nclass MyClient(ncatpy.Client):\n    async def on_group_message(self, message: GroupMessage):\n        _log.info(f\"收到群消息，ID: {message.message.text.text}\")\n        _log.info(message.user_id)\n        if message.user_id == 2793415370:\n            # 当提问者的QQ号是2793415370时，调用XunfeiGPT插件回答他的问题\n            # t = await self._XunfeiGPT.ai_response(input=message.message.text.text, group_id=message.group_id) # 单轮ai聊天\n            t = await self._XunfeiGPT.ai_response_history(input=message.message.text.text, info= True, group_id=message.group_id)# 多轮ai聊天,可用参数：开发者模式：info=True,历史记录次数：history_num=5\n            _log.info(t)\n        if message.message.text.text == \"你好\":\n            # 通过http发送消息\n            t = await message.add_text(\"你好,o\").reply()\n            _log.info(t)\n            \n\n    async def on_private_message(self, message: PrivateMessage):\n        _log.info(f\"收到私聊消息，ID: {message.message.text.text}\")\n        if message.message.text.text == \"你好\":\n            t = await self._api.send_msg(user_id=message.user_id, text=\"你好,o\")\n            _log.info(t)\n\nif __name__ == \"__main__\":\n    # 1. 通过预设置的类型，设置需要监听的事件通道\n    # intents = ncatpy.Intents.public() # 可以订阅public，包括了私聊和群聊\n\n    # 2. 通过kwargs，设置需要监听的事件通道\n    intents = ncatpy.Intents(group_event=True)\n    client = MyClient(intents=intents, plugins=[\"XunfeiGPT\"])# 如果没有插件，则不需要添加plugins=[\"XunfeiGPT\"]\n    client.run()\n```","excerpt":"","includedFiles":[],"tasklists":0,"title":"","headers":[]}}
